{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","monster","name","alt","src","id","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,kBAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,cAAiC,mCAAMD,EAAME,QAAQC,QACrD,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BL,EAAME,QAAQI,GAAxC,4BACtB,mCAAMN,EAAME,QAAQC,QACpB,6BAAKH,EAAME,QAAQK,aCHVC,EAAS,SAACR,GACnB,OAAO,qBAAKC,UAAU,YAAf,SAECD,EAAMS,SAASC,KAAI,SAAAR,GAAO,OACrB,cAAC,EAAD,CAAwBA,QAAWA,GAAvBA,EAAQI,UCLxBK,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAYC,EAAmB,EAAnBA,aACnC,OACI,qBAAKZ,UAAU,SAAf,SACI,uBAAOa,KAAK,SAAUF,YAAaA,EACnCG,SAAWF,QCiCRG,E,kDAjCZ,aAAc,IAAD,8BACX,gBAaHH,aAAa,SAACI,GACX,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAbpC,EAAKC,MAAM,CACTb,SAAS,GACTU,YAAY,IAJH,E,gEAQO,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,+BAM5B,IAAD,EACuBC,KAAKN,MAA7Bb,EADC,EACDA,SAAUU,EADT,EACSA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA5B,GAAO,OAC/CA,EAAQC,KAAK4B,cAAcC,SAASb,EAAYY,kBAC9C,OACE,sBAAK9B,UAAU,MAAf,UACA,mDACC,cAAC,EAAD,CAAWW,YAAa,kBAAoBC,aAAce,KAAKf,eAC/D,cAAC,EAAD,CAAUJ,SAAUoB,W,GA1BZI,aCMJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5e521a9b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = props =>(\r\n    <div className='card-container'> <h2> {props.monster.name}</h2>\r\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n    <h3> {props.monster.name}</h3>\r\n    <h4>{props.monster.email}</h4>\r\n    </div>\r\n      \r\n)\r\n    \r\n    ","import React from \"react\";\r\nimport './card-list.styles.css'\r\nimport{Card}  from '../card/card.component';\r\n\r\nexport const CardList=(props)=>{\r\n    return <div className='card-list'>\r\n          {\r\n            props.monsters.map(monster =>(\r\n                 <Card  key={monster.id} monster= { monster}/>        \r\n            ))        \r\n          } \r\n     \r\n     </div>\r\n}","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder,handleChange }) => {\r\n    return (\r\n        <div className='search'>\r\n            <input type='search'  placeholder={placeholder} \r\n            onChange= {handleChange}  /> \r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport React , {Component} from 'react'\nimport { CardList } from './components/card-list/card-list.component.jsx'\nimport {SearchBox} from './components/search-box/search-box.component.jsx'\n\n class App extends Component {\n   constructor(){\n     super();\n     this.state={\n       monsters:[],\n       searchField:''\n\n     }\n   }\n   componentDidMount(){\n     fetch('https://jsonplaceholder.typicode.com/users')\n     .then(response => response.json())\n     .then(users=>this.setState({monsters:users}));\n   };\n\n  handleChange=(e)=> {\n     this.setState({searchField:e.target.value})\n  }\n   render () {\n     const {monsters, searchField}= this.state;\n     const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n        return (\n          <div className=\"App\">    \n          <h1> Monster Rolodex </h1>\n           <SearchBox placeholder={'Search monsters'}  handleChange={this.handleChange} />    \n           <CardList monsters={filteredMonsters}/> \n       \n          </div>\n      );\n   }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}